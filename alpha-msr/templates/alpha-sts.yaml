{{- $workloadObjectName := index .Values (tpl .Values.workloadObjectName .) }}
apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: {{ include "microservices-runtime.fullname" . }}
spec:
  serviceName: {{ include "microservices-runtime.fullname" . }}-h
  selector:
    matchLabels:
      app: {{ include "microservices-runtime.fullname" . }}
      component: msr
  replicas: {{ $workloadObjectName.replicas }}
  podManagementPolicy: {{ $workloadObjectName.podManagementPolicy }}
  updateStrategy:
    rollingUpdate:
      partition: {{ $workloadObjectName.partition }}
    type: {{ $workloadObjectName.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ include "microservices-runtime.fullname" . }}
        component: msr
    spec:
      {{- with $workloadObjectName.affinity }}   
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}      
      {{- with $workloadObjectName.tolerations }}                           
      tolerations:
        {{- toYaml . | nindent 8 }}    
      {{- end }} 
      securityContext:
        {{- toYaml $workloadObjectName.podSecurityContext | nindent 8 }} 
      containers:          
        - name: {{ $workloadObjectName.containerName }}  
          {{- $containerName := index .Values ( $workloadObjectName.containerName ) }} 
          image: "{{ $containerName.image.repository }}:{{ $containerName.image.tag }}"
          imagePullPolicy: {{ $containerName.image.pullPolicy }}
          {{- with $containerName.lifecycle }} 
          lifecycle:
            {{- toYaml . | nindent 12 }}  
          {{- end }}
        # Resources required for the MSR to function. CPUs and Memory configurations.
          resources:
            {{- toYaml $containerName.resources | nindent 12 }} 
          {{- with $containerName.env }} 
          env:
            {{- toYaml . | nindent 12 }} 
          {{- end }}
          ports:
            {{- toYaml $containerName.ports | nindent 12 }} 
          {{- with $containerName.livenessProbe }}
          livenessProbe:           
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $containerName.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $containerName.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ $containerName.msrLicensePath }}
              subPath: {{ $containerName.msrLicenseFileName }}
              name: application-config
            - mountPath: {{ $containerName.tcLicensePath }}
              subPath: {{ $containerName.tcLicenseFileName }}
              name: application-config
            - name: application-config
              mountPath: {{ $containerName.applicationPropertiesPath }}
              subPath: {{ $containerName.applicationPropertiesFileName }} 
            - name: application-config
              mountPath: {{ $containerName.ediintPropertiesPath }} 
              subPath: {{ $containerName.ediintFileName }} 
            - mountPath: {{ $containerName.containerPath }}
              name: create-dir  
            - name: b2b-nfs-directory   
              mountPath: {{ $containerName.nfsPath }}
            - name: secret-volume 
              mountPath: {{ $containerName.secretsPath }}
              readOnly: true                
      imagePullSecrets:
        - name: {{ $workloadObjectName.imagePullSecrets }}              
      volumes:
      - name: application-config
        configMap:
          name: {{ include "microservices-runtime.fullname" . }}
      - name: b2b-nfs-directory
        persistentVolumeClaim:
          claimName: {{ .Values.PersistentVolumeClaimName }}
      - name: secret-volume
        secret:
          secretName: {{ .Values.secretName }}
      - name: create-dir
        emptyDir: {}      