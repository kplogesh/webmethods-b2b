---
fullnameOverride: ""
nameOverride: ""
environment: dev

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: daeigcs04241.eur.ad.sag
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
podConfig: 
  dependencies:
    enabled: true
    um:
      serviceName: messaging-um
      servicePort: 9000
    terracottaBigmemoryMax:
      serviceName: terracotta-bigmemorymax-0.terracotta-bigmemorymax-h
      servicePort: 9510
  autoScaling: 
    enabled: false 
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  tolerations: 
    - key: "app"
      operator: "Equal"
      value: "b2b"
      effect: "NoSchedule" 
  # Options for node affinity for pod placement is required | preferred. Whether affinity is required or not is decided by setNodeAffinity parameter that can be set to true | false
  affinity: 
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: app
            operator: In
            values:
            - "b2b" 
  #securityConext values
  podSecurityContext:
    fsGroup: 1724
    runAsUser: 1724
  # Service account name
  serviceAccountName: b2b-sa
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy: RollingUpdate
  partition: 0
  appName: b2b
  # Persistent Volume Claim
  persistentVolumeClaimName: b2b-nfs-storage

  # Secrets
  secretName: b2b-secrets
  # Secret to be used to pull the image from repository
  imagePullSecrets: regcred
  # Container configurations residing in a pod
  initContainer:
    image: 
      repository: redhat/ubi8
      tag: "latest" 
      pullPolicy: IfNotPresent
    containerPath: /dependency
  primaryContainer:
    image: 
      repository: wmmsrtn
      tag: "10.15.0" 
      pullPolicy: IfNotPresent
    # Resources required for the apigateway to function. CPUs and Memory configurations.
    resources:
      limits:
        cpu: 1
        memory: "4G"
      requests:
        cpu: 1
        memory: "4G" 
    env:
      - name: JAVA_MIN_MEM
        value: "1024M"
      - name: JAVA_MAX_MEM
        value: "2048M"        
      - name: LD_LIBRARY_PATH
        value: "/opt/softwareag/IntegrationServer/lib"
    ports:
      - containerPort: 5555
        name: http
      - containerPort: 5543
        name: https
    # Liveness probe to check whether container is active. Restart happens when liveness probe fails.
    livenessProbe:
      timeoutSeconds: 5
      initialDelaySeconds: 60
      failureThreshold: 5
      periodSeconds: 20
      successThreshold: 1
      tcpSocket:
        port: 5555
    # Readiness probe to check whether container is ready. Restart happens when readiness probe fails.
    readinessProbe:
      tcpSocket:
        port: 5555
      timeoutSeconds: 5
      initialDelaySeconds: 60
      failureThreshold: 5
      periodSeconds: 20
      successThreshold: 1
    # Startup probe for the application to be ready. Pauses readiness/liveness probe till startup is successful
    startupProbe:
      tcpSocket:
        port: 5555
      failureThreshold: 20
      periodSeconds: 20
    # Volume mount required for the application to function
    msrLicensePath: /opt/softwareag/IntegrationServer/bin/../config/licenseKey.xml
    msrLicenseFileName: msr-license.xml
    tcLicensePath: /opt/softwareag/common/conf/terracotta-license.key
    tcLicenseFileName: terracotta-license.key
    applicationPropertiesPath: /opt/softwareag/IntegrationServer/application.properties
    applicationPropertiesFileName: application.properties
    ediintPropertiesPath: /opt/softwareag/IntegrationServer/packages/WmEDIINT/config/properties.cnf
    ediintFileName: ediint-properties.cnf
    nfsPath: /b2bdir/demo
    containerPath: /b2bdir
    secretsPath: /etc/secrets
    # PostStart command execution
    lifecycle:
      postStart:
        exec:
          command:
            - /bin/sh
            - -c
            - |
              sed -i 's/notateit/sapgw10s/g' /etc/services
              mkdir -p /b2bdir/demo/platinum
              mkdir -p /b2bdir/demo/platinum/work
              mkdir -p /b2bdir/demo/platinum/error
              mkdir -p /b2bdir/demo/platinum/done
      preStop:
        exec:
          command:
            - /bin/sh
            - -c
            - sleep 50
# Pod configuration ends here.

#Service definition
service:
  type: NodePort
  # Ingress routing port
  port: 5555
  sessionAffinity:
    enabled: true
serviceAnnotations:
  prometheus.io/scrape: 'true'    
  prometheus.io/port: '5555'
nodePortDef:
    - port: 5555
      name: http-server
      targetPort: 5555
    - port: 5543
      name: https-server
      targetPort: 5543
headlessPortDef:
    - port: 5555
      name: http-server
      targetPort: 5555
    - port: 5543
      name: https-server
      targetPort: 5543