---
MSRName: "alpha-msr"
versionName: v2
fullnameOverride: ""
environment: dev

workloadObjectName: &workloadObjectName
  "terracotta-bigmemorymax"
*workloadObjectName:
  containerName: &containerName
    "terracotta-bigmemorymax-container"    
  # Hard means that by default pods will only be scheduled if there are enough nodes for them
  # and that they will never end up on the same node. Setting this to soft will do this "best effort"
  setTolerations: "false"
  # Options for node affinity for pod placement is required | preferred. Whether affinity is required or not is decided by setNodeAffinity parameter that can be set to true | false
  setNodeAffinity: "false"
  nodeAffinity: "required"
  # Options for adding tolerations is true | false
  #securityConext values
  fsGroup: "1724"
  runAsUser: "1724"
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy: RollingUpdate
  partition: 0
  appName: b2b
  # Volume mount to volume mapping
  volumes:
    - name: config-volume
      configMap:
        name: *workloadObjectName
    - name: license-volume
      configMap:
        name: license-tc-cm
  # Secret to be used to pull the image from repository
  imagePullSecrets: regcred
  # Volume Claim Templates
  volumeClaimTemplates:
  - metadata:
      name: diskstore
      labels:
        type: terracotta-store
    spec:
      accessModes: 
      - ReadWriteOnce
      storageClassName: local-path
      resources:
        requests:
          storage: 2Gi
*containerName:
  image: sagcr.azurecr.io/bigmemorymax-server
  imageTag: "4.4" 
  imagePullPolicy: IfNotPresent
  #Ports
  serverPortName: server
  serverPort: 9510
  managementPortName: management
  managementPort: 9540
  replicationPortName: replication
  replicationPort: 9530
  # Resources required for the apigateway to function. CPUs and Memory configurations.
  #limits:
  limitcpu: "1"
  limitmemory: "3G"
  #Request:
  requestcpu: "1"
  requestmemory: "3G"
  # Liveness probe to check whether container is active. Restart happens when liveness probe fails.
  livenessProbe:
    exec:
      # Handling 400 status as well as in case of PASSIVE(terracotta-0) and ACTIVE(terracotta-1) startup scenario there is a deadlock.
      command: ["sh", "-c", "status_code=$(wget --spider -S 'http://localhost:9510/config' 2>&1 | grep 'HTTP/' | awk '{print $2}'); if [ $status_code -eq \"200\" ] || [ $status_code -eq \"400\" ]; then exit 0; fi; exit 1"]
    initialDelaySeconds: 15
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 100
  # Readiness probe to check whether container is ready. Restart happens when readiness probe fails.
  readinessProbe:
    exec:
      # Handling 400 status as well as in case of PASSIVE(terracotta-0) and ACTIVE(terracotta-1) startup scenario there is a deadlock.
      command: ["sh", "-c", "status_code=$(wget --spider -S 'http://localhost:9510/config' 2>&1 | grep 'HTTP/' | awk '{print $2}'); if [ $status_code -eq \"200\" ] || [ $status_code -eq \"400\" ]; then exit 0; fi; exit 1"]
    initialDelaySeconds: 15
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 100
  # Volume mount required for the application to function
  volumeMounts:
    - name: diskstore
      mountPath: /opt/softwareag/run/data
    - name: diskstore
      mountPath: /opt/softwareag/run/backup
    - name: diskstore
      mountPath: /opt/softwareag/run/logs
    - name: diskstore
      mountPath: /opt/softwareag/run/client-logs
    - name: config-volume
      mountPath: /opt/softwareag/config/tc-config.xml
      subPath: tc-config.xml
    - name: config-volume
      mountPath: /opt/softwareag/config/license.key
      subPath: terracotta-license.key
#Service definition
headlessPortDef:
  - port: 9510
    name: tcp-server     
  - port: 9530
    name: tcp-replication
  - port: 9540
    name: tcp-management
    targetPort: 9540  