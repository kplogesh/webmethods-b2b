---
fullnameOverride: ""
nameOverride: ""
environment: dev

workloadObjectName: &workloadObjectName
  "alpha-msr"
*workloadObjectName:
  containerName: &containerName
    "alpha-msr-container"    
  # Hard means that by default pods will only be scheduled if there are enough nodes for them
  # and that they will never end up on the same node. Setting this to soft will do this "best effort"
  setTolerations: "false"
  # Options for node affinity for pod placement is required | preferred. Whether affinity is required or not is decided by setNodeAffinity parameter that can be set to true | false
  setNodeAffinity: "false"
  nodeAffinity: "required"
  # Options for adding tolerations is true | false
  #securityConext values
  fsGroup: "1724"
  runAsUser: "1724"
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy: RollingUpdate
  partition: 0
  appName: b2b
  # Volume mount to volume mapping
  volumes:
    - name: licensekey
      configMap:
        name: license-msr-tc
    - name: application-properties
      configMap:
        name: *workloadObjectName
    - name: ediint-properties
      configMap:
        name: *workloadObjectName
    - name: b2b-nfs-directory
      persistentVolumeClaim:
        claimName: b2b-nfs-storage
    - name: secret-volume
      secret:
        secretName: b2b-secrets
    - name: create-dir
      emptyDir: {}
  # Secret to be used to pull the image from repository
  imagePullSecrets: regcred
*containerName:
  image: wmmsrtn
  imageTag: "10.15.0" 
  imagePullPolicy: IfNotPresent
  #Ports
  httpPort: 5555
  httpsPort: 5543
  # Resources required for the apigateway to function. CPUs and Memory configurations.
  #limits:
  limitcpu: "1"
  limitmemory: "4G"
  #Request:
  requestcpu: "1"
  requestmemory: "4G"
  #JVM
  JAVA_MIN_MEM: "1024M"
  JAVA_MAX_MEM: "2048M" 
  #Library Path
  LibPath: /opt/softwareag/IntegrationServer/lib
  # Liveness probe to check whether container is active. Restart happens when liveness probe fails.
  livenessProbe:
    timeoutSeconds: 5
    initialDelaySeconds: 60
    failureThreshold: 5
    periodSeconds: 20
    successThreshold: 1
    tcpSocket:
      port: 5555
  # Readiness probe to check whether container is ready. Restart happens when readiness probe fails.
  readinessProbe:
    tcpSocket:
      port: 5555
    timeoutSeconds: 5
    initialDelaySeconds: 60
    failureThreshold: 5
    periodSeconds: 20
    successThreshold: 1
  # Startup probe for the application to be ready. Pauses readiness/liveness probe till startup is successful
  startupProbe:
    tcpSocket:
      port: 5555
    failureThreshold: 20
    periodSeconds: 20
  # Volume mount required for the application to function
  volumeMounts:
    - mountPath: /opt/softwareag/IntegrationServer/bin/../config/licenseKey.xml
      subPath: msr-licenseKey.xml
      name: application-config
    - mountPath: /opt/softwareag/common/conf/terracotta-license.key
      subPath: terracotta-license.key
      name: application-config
    - name: application-config
      mountPath: /opt/softwareag/IntegrationServer/application.properties
      subPath: application.properties  
    - name: application-config
      mountPath: /opt/softwareag/IntegrationServer/packages/WmEDIINT/config/properties.cnf
      subPath: ediint-properties.cnf
    - mountPath: /b2bdir
      name: create-dir  
    - name: b2b-nfs-directory   
      mountPath: /b2bdir/demo
    - name: secret-volume 
      mountPath: /etc/secrets
      readOnly: true   
  # PostStart command execution
  postStartCommand: 
    - /bin/sh
    - -c
    - |
      sed -i 's/notateit/sapgw10s/g' /etc/services
      mkdir -p /b2bdir/demo/platinum
      mkdir -p /b2bdir/demo/platinum/work
      mkdir -p /b2bdir/demo/platinum/error
      mkdir -p /b2bdir/demo/platinum/done
  # PreStop command execution
  preStopCommand: 
    - /bin/sh
    - -c
    - sleep 50

# Persistent Volume Claim
PersistentVolumeClaimName: b2b-nfs-storage

# Secrets
secretName: b2b-secrets
#Service definition
nodePortDef:
    - port: 5555
      name: http-server
      targetPort: 5555
      nodePort: 30201
    - port: 5543
      name: https-server
      targetPort: 5543
      nodePort: 30202
headlessPortDef:
    - port: 5555
      name: http-server
      targetPort: 5555
    - port: 5543
      name: https-server
      targetPort: 5543